<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>1. Verificar se os scripts/fontes estão atualizados.
2. Colocar no corpo do e-mail a ordem de compilação dos scripts, 
as parametrizações necessárias e quais os sistemas que precisarão
 ser parados.
3. Atualizar branchs referentes ao sistema no Github.</value>
  </data>
</root>